Operators in JavaScript
-----------------------
- Operators are symbols that perform operations on operands (Variables or values).
- There are different types of JavaScript operators:
            1. Arithmetic Operators
            2. Assignment Operators
            3. Comparison Operators
            4. String Operators
            5. Logical Operators
            6. Bitwise Operators
            7. Ternary Operator
            8. Type Operator

1. Arithmetic Operators
~~~~~~~~~~~~~~~~~~~~~~~
- Used for performing mathematical calculations.
+------------+--------------------+----------+--------+
| Operator   | Description        | Example  | Output |
+------------+--------------------+----------+--------+
| +          | Addition           | 5 + 3    | 8      |
+------------+--------------------+----------+--------+
| -          | Subtraction        | 10 - 4   | 6      |
+------------+--------------------+----------+--------+
| *          | Multiplication     | 6 * 2    | 12     |
+------------+--------------------+----------+--------+
| /          | Division           | 8 / 2    | 4      |
+------------+--------------------+----------+--------+
| %          | Modulus (Remainder)| 10 % 3   | 1      |
+------------+--------------------+----------+--------+
| **         | Exponentiation     | 2 ** 3   | 8      |
+------------+--------------------+----------+--------+

2. Assignment Operators
~~~~~~~~~~~~~~~~~~~~~~~
- Used to assign values to variables.
+------------+--------------------+-----------+----------------+
| Operator   | Description        | Example   | Equivalent To  |
+------------+--------------------+-----------+----------------+
| =          | Assign value       | x = 5     | x = 5          |
+------------+--------------------+-----------+----------------+
| +=         | Add and assign     | x += 3    | x = x + 3      |
+------------+--------------------+-----------+----------------+
| -=         | Subtract and assign| x -= 2    | x = x - 2      |
+------------+--------------------+-----------+----------------+
| *=         | Multiply and assign| x *= 4    | x = x * 4      |
+------------+--------------------+-----------+----------------+
| /=         | Divide and assign  | x /= 2    | x = x / 2      |
+------------+--------------------+-----------+----------------+
| %=         | Modulus and assign | x %= 3    | x = x % 3      |
+------------+--------------------+-----------+----------------+

3. Comparison Operators
~~~~~~~~~~~~~~~~~~~~~~~
- Used to compare values and return a boolean (true or false).
+------------+--------------------------------+-------------+--------+
| Operator   | Description                    | Example     | Output |
+------------+--------------------------------+-------------+--------+
| ==         | Equal to (loose equality)      | 5 == '5'    | true   |
+------------+--------------------------------+-------------+--------+
| ===        | Strictly equal (type + value)  | 5 === '5'   | false  |
+------------+--------------------------------+-------------+--------+
| !=         | Not equal                      | 10 != 5     | true   |
+------------+--------------------------------+-------------+--------+
| !==        | Strictly not equal             | 10 !== '10' | true   |
+------------+--------------------------------+-------------+--------+
| >          | Greater than                   | 8 > 5       | true   |
+------------+--------------------------------+-------------+--------+
| <          | Less than                      | 3 < 7       | true   |
+------------+--------------------------------+-------------+--------+
| >=         | Greater than or equal to       | 10 >= 10    | true   |
+------------+--------------------------------+-------------+--------+
| <=         | Less than or equal to          | 6 <= 3      | false  |
+------------+--------------------------------+-------------+--------+

4. String Operators
-------------------
- Used to perform operations on string values.
+------------+-----------------------------+-----------------------------+------------+
| Operator   | Description                 | Example                     | Output     |
+------------+-----------------------------+-----------------------------+------------+
| +          | Concatenation               | "Hello" + " World"          | Hello World|
+------------+-----------------------------+-----------------------------+------------+
| +=         | Concatenation Assignment    | str = "Hello"; str += "!"   | Hello!     |
+------------+-----------------------------+-----------------------------+------------+
| ==         | Equal to                    | "abc" == "abc"              | true       |
+------------+-----------------------------+-----------------------------+------------+
| !=         | Not equal to                | "abc" != "xyz"              | true       |
+------------+-----------------------------+-----------------------------+------------+
| >          | Greater than (lexicographically) | "b" > "a"              | true       |
+------------+-----------------------------+-----------------------------+------------+
| <          | Less than (lexicographically) | "apple" < "banana"        | true       |
+------------+-----------------------------+-----------------------------+------------+

5. Logical Operators
~~~~~~~~~~~~~~~~~~~~
- Used to perform logical operation on boolean values.
+------------+-------------+--------------+--------+
| Operator   | Description | Example      | Output |
+------------+-------------+--------------+--------+
| &&         | AND         | true && false| false  |
+------------+-------------+--------------+--------+
| ||         | OR          | true || false| true   |
+------------+-------------+--------------+--------+
| !          | NOT         | !true        | false  |
+------------+-------------+--------------+--------+

6. Bitwise Operators
--------------------
- Used to perform bit-level operations.
+------------+-------------+-------------------------------+
| Operator   | Description | Example (Binary)              |
+------------+-------------+-------------------------------+
| &          | AND         | 5 & 1 → 0101 & 0001 → 0001 (1)|
+------------+-------------+-------------------------------+
| |          | OR          | 5 | 1 → 0101 | 0001 → 0101 (5)|
+------------+-------------+-------------------------------+
| ^          | XOR         | 5 ^ 1 → 0101 ^ 0001 → 0100 (4)|
+------------+-------------+-------------------------------+
| ~          | NOT         | ~5 → ~0101 → 1010 (-6)        |
+------------+-------------+-------------------------------+
| <<         | Left Shift  | 5 << 1 → 1010 (10)            |
+------------+-------------+-------------------------------+
| >>         | Right Shift | 5 >> 1 → 0010 (2)             |
+------------+-------------+-------------------------------+

7. Ternary Operator
~~~~~~~~~~~~~~~~~~~
- A shorthand for if-else condition.
- Syntax: condition ? value_if_true : value_if_false;
- Example:
    let age = 20;
    let status = (age >= 18) ? "Adult" : "Minor";
    console.log(status); // Output: Adult

8. Type Operators
~~~~~~~~~~~~~~~~~
- Used to determine the data type of a variable.
- Example:
    console.log(typeof 42);        // Output: "number"
    console.log(typeof "hello");   // Output: "string"
    console.log(typeof true);      // Output: "boolean"


